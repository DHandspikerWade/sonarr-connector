image: handspiker2/ci-tools:docker

variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2

stages:
    - build
    - deploy

build_feed:
    stage: build
    image: handspiker2/ci-tools:docker
    services:
        - docker:dind
    
    script:
        - docker version
        - docker pull alpine:latest
        - docker pull golang:alpine
        - docker build --build-arg BUILD_DATE="$(date -I)" -f feed.Dockerfile -t nhk-feed .
        - docker save nhk-feed > nhk-feed.image
    only:
        - master
    artifacts:
        expire_in: 1 week
        paths:
            - nhk-feed.image

build_downloader:
    stage: build
    image: handspiker2/ci-tools:docker
    services:
        - docker:dind
    
    script:
        - docker version
        - docker pull nginx:stable
        - docker build --build-arg BUILD_DATE="$(date -I)" -t nhk-download .
        - docker save nhk-download > nhk-download.image
    only:
        - master
    artifacts:
        expire_in: 1 week
        paths:
            - nhk-download.image

deploy:
    stage: deploy
    image: handspiker2/ci-tools:latest
    script:
        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
        - mkdir -p ~/.ssh
        - eval $(ssh-agent -s)
        - ssh-keyscan -H ${DEPLOY_HOST}
        - chmod 600 "$SSH_PRIVATE"
        - ssh-add "$SSH_PRIVATE"
        - scp -v *.image ${DOCKER_USER}@${DEPLOY_HOST}:/tmp/
        - |
            cat <<"EOF" | ssh ${DOCKER_USER}@${DEPLOY_HOST}
                cat /tmp/nhk-download.image | docker load
                ( docker stop nhk && docker rm nhk ) || true
                docker run -td --restart unless-stopped --name nhk --network proxy -v /apps/nhk:/usr/share/nginx/html/sonarr -e SONARR_HOST=$SONARR_HOST  -e SONARR_KEY=${SONARR_KEY} -e SEED_HOST=${SEED_HOST} nhk-download
                
                cat /tmp/nhk-feed.image | docker load
                ( docker stop nhk-feed && docker rm nhk-feed ) || true
                docker run -td --restart unless-stopped --name nhk-feed --network proxy -v /apps/nhk:/data nhk-feed
                
                docker image prune -f
            EOF
    only:
        - master