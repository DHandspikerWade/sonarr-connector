image: handspiker2/ci-tools:docker

variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2

stages:
    - build
    - deploy

# build_feed:
#     stage: build
#     image: handspiker2/ci-tools:docker
#     services:
#         - docker:dind
    
#     script:
#         - docker version
#         - docker pull alpine:latest
#         - docker pull golang:alpine
#         - docker build --build-arg BUILD_DATE="$(date -I)" -f feed.Dockerfile -t nhk-feed .
#         - docker save nhk-feed > nhk-feed.image
#     only:
#         - master
#     artifacts:
#         expire_in: 1 week
#         paths:
#             - nhk-feed.image

build_downloader:
    stage: build
    image: handspiker2/ci-tools:docker
    services:
        - docker:dind
    
    script:
        - docker version
        - docker pull nginx:stable
        - docker build --build-arg BUILD_DATE="$(date -I)" -t nhk-download .
        - docker save nhk-download > nhk-download.image
    only:
        - master
    artifacts:
        expire_in: 1 week
        paths:
            - nhk-download.image

deploy:
    stage: deploy
    image: handspiker2/ci-tools:latest
    script:
        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
        - mkdir -p ~/.ssh
        - eval $(ssh-agent -s)
        - touch ~/.ssh/known_hosts
        - ssh-keyscan -H ${DEPLOY_HOST} >> ~/.ssh/known_hosts
        - chmod 600 "$SSH_PRIVATE"
        - ssh-add "$SSH_PRIVATE"
        - scp *.image ${DOCKER_USER}@${DEPLOY_HOST}:/tmp/
        - |
            cat <<EOF | ssh ${DOCKER_USER}@${DEPLOY_HOST}
                mkdir -p /apps/nhk
                if [ ! -f /apps/nhk/history.json ]; then
                    echo '{}' > /apps/nhk/history.json
                fi

                if [ ! -f /apps/nhk/nhk.json ]; then
                    echo '{}' > /apps/nhk/nhk.json
                fi

                if [ ! -f /apps/nhk/youtube.json ]; then
                    echo '{}' > /apps/nhk/youtube.json
                fi

                cat /tmp/nhk-download.image | docker load
                ( docker stop nhk && docker rm nhk ) || true
                docker run -td --restart unless-stopped --name nhk --network proxy -v /cookies.txt:/cookies.txt -v /apps/nhk/youtube.json:/app/youtube.json -v /apps/nhk/nhk.json:/app/nhk.json -v /apps/nhk/history.json:/config/history.json -v /apps/nhk:/usr/share/nginx/html/sonarr -e SONARR_HOST=$SONARR_HOST  -e SONARR_KEY=${SONARR_KEY} -e SEED_HOST=${SEED_HOST} -l traefik.frontend.entryPoints=https -l traefik.enable=true -l traefik.frontend.rule="Host:${SEED_HOST};PathPrefix:/sonarr" -l traefik.docker.network=proxy nhk-download 
                
                # cat /tmp/nhk-feed.image | docker load
                # ( docker stop nhk-feed && docker rm nhk-feed ) || true
                # docker run -td --restart unless-stopped --name nhk-feed --network proxy -v /apps/nhk:/data -l traefik.frontend.entryPoints=https -l traefik.enable=true -l traefik.frontend.rule="Host:${SEED_HOST};Path:/create_feed.php" -l traefik.docker.network=proxy nhk-feed
                
                docker exec nhk echo hello

                docker image prune -f
            EOF
    only:
        - master
